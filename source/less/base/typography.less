@font-face{
  font-family: 'debut'; 
  src: url('@{assets}DebutSans-Regular.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
}
@font-face{
  font-family: 'debut'; 
  src: url('@{assets}DebutSans-RegularItalic.woff2') format('woff2');
  font-weight: normal;
  font-style: italic;
}
@font-face{
  font-family: 'debut'; 
  src: url('@{assets}DebutSans-Black.woff2') format('woff2');
  font-weight: bold;
  font-style: normal;
}
@font-face{
  font-family: 'debut'; 
  src: url('@{assets}DebutSans-BlackItalic.woff2') format('woff2');
  font-weight: bold;
  font-style: italic;
}
@font-face{
  font-family: 'bely'; 
  src: url('@{assets}BelyDisplay-Regular.woff2') format('woff2');
  font-weight: normal;
  font-style: normal;
}
@import url('https://fonts.googleapis.com/css2?family=DM+Mono&display=swap');

#type {
  .family() {
      .sans() {
          font-family: 'debut', sans-serif;
      }
      .serif() {
        font-family: 'bely', serif;
      }
      .mono() {
        font-family: 'DM Mono', monospace;
    }
  }
  .style() {
    .link(@underline: var(--c-text), @hover: var(--c-pink), @outline: black) {
      color: var(--c-text);
      text-decoration-line: underline;
      text-decoration-color: @underline;
      -webkit-text-decoration-style: solid;
      padding: var(--space-xxs);
      margin: calc(-1 * var(--space-xxs));

      &:hover {
        color: @hover;
        text-decoration-color: @hover;
      }
      &:focus {
        outline: 1px dotted @outline;
        color: @hover;
        text-decoration-color: @hover;
      }
    }
  }
  .make-typescale-up(@counter: 0) when (@counter <= @typescale-up-steps) {
      @min: round(pow(@type-min-scale, @counter) * @type-min-size, 2);
      @max: round(pow(@type-max-scale, @counter) * @type-max-size, 2);
      --step-@{counter}: calc((unit((@min/@base), rem)) + (@max - @min) *var(--fluid-bp));
      #type > .make-typescale-up(@counter + 1); 
  }
  .make-typescale-down(@counter: 1) when (@counter <= @typescale-down-steps) {
      @min: round((@type-min-size / pow(@type-min-scale, @counter)), 2);
      @max: round((@type-max-size / pow(@type-max-scale, @counter)), 2);
      --step--@{counter}: calc((unit((@min/@base), rem)) + (@max - @min) *var(--fluid-bp));
      #type > .make-typescale-down(@counter + 1);  
  }

  //translate between any steps within the system:
  .steps(@minstep, @maxstep) {
      @min: round(pow(@type-min-scale, @minstep) * @type-min-size, 2);
      @max: round(pow(@type-max-scale, @maxstep) * @type-max-size, 2);
      font-size: calc((unit((@min/@base), rem)) + (@max - @min) *var(--fluid-bp));
  }
}

:root {
  #type > .make-typescale-up;
  #type > .make-typescale-down;
}

//global text styles
body {
  #type.family.sans;
  font-variant-ligatures: common-ligatures;
  font-size: var(--step-0);
  line-height: var(--line-height);
}

h1, h2, h3, h4 {
  line-height: var(--line-height--tight);
}

h1, .h1 { //applies to main headings
  #type.steps(5,9);
  #type.family.serif;
  font-weight: normal;
}

h2, .h2 {
  font-size: var(--step-3);
  font-weight: bold;
  #type.family.sans;
}

h3, .h3 {
  font-size: var(--step-1);
  font-weight: bold;
  #type.family.sans;
}

.lead {
  font-size: var(--step-1);
}

h4, .h4 {
  font-size: var(--step-0);
  font-weight: bold; 
  #type.family.sans;   
}

code, pre {
  #type.family.mono;
  font-size: 90%;
}

.hanging-punctuation {
  margin-left: -0.3em;
}
@supports (hanging-punctuation: first) {
  
  .hanging-punctuation {
    margin-left: 0;
  }
}

hr {
  background-image: url("@{assets}roo-mark-sm.svg");
  background-repeat: no-repeat;
  background-position: center center;
  height: unit((20/@base), rem);
  border: none;
}

abbr {
  text-decoration-color: var(--c-text-hint);
  text-decoration-line: underline;
  text-decoration-style: dashed;
}

.hint {
  font-size: var(--step--1);
  color: var(--c-text-hint);
}

a.hint {
  #type.style.link;
  font-size: var(--step--1);
  color: var(--c-text-hint);
  text-decoration: none;
}